{"version":3,"file":"static/js/170.4297583c.chunk.js","mappings":"iLAqKA,QA9JA,WACE,MAAOA,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,OAC9CG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC1CK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IACtBO,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,KACRC,GAAoB,GACnB,IAEH,MAAMA,EAAqBC,UACzB,IAEE,MAAMC,GAAIC,EAAAA,EAAAA,IAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,qBAAqBC,EAAAA,EAAAA,IAAQ,SAAU,QAKhEC,SAJsBC,EAAAA,EAAAA,IAAQN,IAINO,KAAKC,KAAIC,IAAG,CACxCC,GAAID,EAAIC,MACLD,EAAIE,OACPC,MAAOH,EAAIC,OAGbL,EAAQQ,KAAK,CAAEC,MAAO,wCAAWF,MAAO,SAAUG,OAAQ,IAC1D3B,EAAkBiB,GAGdA,EAAQW,OAAS,GACnBzB,EAAkBc,EAAQ,GAAGO,OAE/BjB,GAAW,EACb,CAAE,MAAOsB,GACPC,QAAQD,MAAM,iCAAkCA,GAChDtB,GAAW,EACb,GAGIwB,EAAYA,KAAO,IAADC,EACtB,MAAuB,WAAnB9B,EACK+B,OAAO7B,IAAiB,GAE8B,QAAxD4B,EAAAjC,EAAemC,MAAKC,GAAOA,EAAIX,QAAUtB,WAAe,IAAA8B,OAAA,EAAxDA,EAA0DL,SAAU,CAAC,EAG9E,SAASS,EAAmBT,GAAS,IAADU,EAClC,MAAMC,EAAU,SAAWC,KAAKC,MAC1BC,EAAeC,OAAOC,aAnDR,wCAqDdC,GAA8E,QAAxDP,EAAAtC,EAAemC,MAAKC,GAAOA,EAAIX,QAAUtB,WAAe,IAAAmC,OAAA,EAAxDA,EAA0DX,QAAS,2BAE/Fe,EAAaI,eAAe,eAAM,CAChClB,SACAW,UACAQ,UAAWF,EACXG,aAAc,iCACdC,WAAYN,OAAOO,SAASC,OAAS,mBACrCC,QAAST,OAAOO,SAASC,OAAS,kBAEnCE,OAAM,SAAUvB,GACI,gBAAfA,EAAMwB,KACRC,MAAM,kEAENA,MAAM,6DAAkBzB,EAAM0B,QAElC,GACF,CAuCA,OAAIjD,GACKkD,EAAAA,EAAAA,KAAA,OAAAC,SAAK,2BAIZC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAyBC,MAAO,CAAEC,SAAU,IAAKC,OAAQ,YAAaC,QAAS,GAAIC,WAAY,OAAQC,aAAc,EAAGC,UAAW,8BAA+BT,SAAA,EAC/KD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,kKACJC,EAAAA,EAAAA,MAAA,OAAKE,MAAO,CAAEO,aAAc,IAAKV,SAAA,CAC9B1D,EAAeqB,KAAIe,IAClBqB,EAAAA,EAAAA,KAAA,OAAqBI,MAAO,CAAEO,aAAc,IAAKV,UAC/CC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,SACEY,KAAK,QACLC,KAAK,gBACL7C,MAAOW,EAAIX,MACX8C,QAASpE,IAAmBiC,EAAIX,MAChC+C,SAAUA,IAAMpE,EAAkBgC,EAAIX,SAEvCW,EAAIT,MACU,WAAdS,EAAIX,QACHkC,EAAAA,EAAAA,MAAA,QAAME,MAAO,CAAEY,WAAY,EAAGC,MAAO,QAAShB,SAAA,CAAC,IAAEtB,EAAIR,OAAO+C,iBAAiB,iBAXzEvC,EAAIX,SAgBI,WAAnBtB,IACCsD,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAEe,UAAW,GAAIlB,UAC3BD,EAAAA,EAAAA,KAAA,SACEY,KAAK,SACLQ,IAAI,OACJC,KAAK,OACLC,YAAY,6DACZtD,MAAOpB,EACPmE,SAAUQ,GAAK1E,EAAgB0E,EAAEC,OAAOxD,OACxCoC,MAAO,CAAEqB,MAAO,OAAQlB,QAAS,EAAGE,aAAc,EAAGiB,OAAQ,0BAKrE1B,EAAAA,EAAAA,KAAA,UACE2B,QA7EgBC,KACpB,MAAMzD,EAASI,IACf,IAAKW,OAAOC,aAAc,CACxB,MAAM0C,EAASC,SAASC,cAAc,UAUtC,OATAF,EAAOG,IAAM,yCACbH,EAAO1E,OAAQ,EACf2E,SAASG,KAAKC,YAAYL,GAC1BA,EAAOM,OAAS,KACdvD,EAAmBT,EAAO,OAE5B0D,EAAOO,QAAU,KACftC,MAAM,kKAAqC,EAG/C,CACAlB,EAAmBT,EAAO,EA+DtBiC,MAAO,CAAEqB,MAAO,OAAQlB,QAAS,GAAIC,WAAY,UAAWS,MAAO,OAAQS,OAAQ,OAAQjB,aAAc,EAAG4B,SAAU,GAAIC,OAAQ,WAClIC,SAAUhE,IAAc,IAAK0B,SAC9B,+BAMP,C","sources":["pages/PaymentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore';\n\nconst TOSS_CLIENT_KEY = 'test_ck_GjLJoQ1aVZq1pAlkbomJ3w6KYe2R';\n\nfunction PaymentPage() {\n  const [paymentOptions, setPaymentOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [customAmount, setCustomAmount] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // 결제 옵션 불러오기\n  useEffect(() => {\n    loadPaymentOptions();\n  }, []);\n\n  const loadPaymentOptions = async () => {\n    try {\n//      const querySnapshot = await getDocs(collection(db, 'payment_settings'));\n      const q = query(collection(db, 'payment_settings'), orderBy('amount', 'asc'));\n      const querySnapshot = await getDocs(q);\n\n      \n\n      const options = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        value: doc.id // value를 문서 ID로 설정\n      }));\n      // 직접입력 옵션 추가\n      options.push({ label: '금액 직접입력', value: 'custom', amount: 0 });\n      setPaymentOptions(options);\n      \n      // 첫 번째 옵션을 기본값으로 설정\n      if (options.length > 0) {\n        setSelectedOption(options[0].value);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading payment options:', error);\n      setLoading(false);\n    }\n  };\n\n  const getAmount = () => {\n    if (selectedOption === 'custom') {\n      return Number(customAmount) || 0;\n    }\n    return paymentOptions.find(opt => opt.value === selectedOption)?.amount || 0;\n  };\n\n  function requestTossPayment(amount) {\n    const orderId = 'order_' + Date.now();\n    const tossPayments = window.TossPayments(TOSS_CLIENT_KEY);\n    \n    const selectedOptionLabel = paymentOptions.find(opt => opt.value === selectedOption)?.label || '직접입력';\n    \n    tossPayments.requestPayment('카드', {\n      amount,\n      orderId,\n      orderName: selectedOptionLabel,\n      customerName: '테스트회원',\n      successUrl: window.location.origin + '/payment/success',\n      failUrl: window.location.origin + '/payment-fail',\n    })\n    .catch(function (error) {\n      if (error.code === 'USER_CANCEL') {\n        alert('결제가 취소되었습니다.');\n      } else {\n        alert('결제에 실패했습니다.\\n' + error.message);\n      }\n    });\n  }\n\n  const handlePayment = () => {\n    const amount = getAmount();\n    if (!window.TossPayments) {\n      const script = document.createElement('script');\n      script.src = 'https://js.tosspayments.com/v1/payment';\n      script.async = true;\n      document.body.appendChild(script);\n      script.onload = () => {\n        requestTossPayment(amount);\n      };\n      script.onerror = () => {\n        alert('결제 모듈을 불러오지 못했습니다. 잠시 후 다시 시도해주세요.');\n      };\n      return;\n    }\n    requestTossPayment(amount);\n  };\n\n  const handlePaymentSuccess = (paymentResult) => {\n    // 결제 정보 생성\n    const paymentInfo = {\n      reservationId: paymentResult.reservationId,\n      amount: paymentResult.amount,\n      reservationDate: paymentResult.reservationDate,\n      startTime: paymentResult.startTime,\n      endTime: paymentResult.endTime,\n      paymentMethod: paymentResult.paymentMethod,\n      paymentDate: new Date().toISOString()\n    };\n\n    // PaymentSuccess 페이지로 이동하면서 결제 정보 전달\n    navigate('/payment/success', { \n      state: { paymentInfo },\n      replace: true \n    });\n  };\n\n  if (loading) {\n    return <div>로딩중...</div>;\n  }\n\n  return (\n    <div className=\"payment-page-container\" style={{ maxWidth: 400, margin: '40px auto', padding: 20, background: '#fff', borderRadius: 8, boxShadow: '0 2px 8px rgba(0,0,0,0.08)' }}>\n      <h2>결제하기(시험중으로서 지금은 결제가 이루어지지 않습니다)</h2>\n      <div style={{ marginBottom: 24 }}>\n        {paymentOptions.map(opt => (\n          <div key={opt.value} style={{ marginBottom: 12 }}>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"paymentOption\"\n                value={opt.value}\n                checked={selectedOption === opt.value}\n                onChange={() => setSelectedOption(opt.value)}\n              />\n              {opt.label}\n              {opt.value !== 'custom' && (\n                <span style={{ marginLeft: 8, color: '#888' }}>({opt.amount.toLocaleString()}원)</span>\n              )}\n            </label>\n          </div>\n        ))}\n        {selectedOption === 'custom' && (\n          <div style={{ marginTop: 8 }}>\n            <input\n              type=\"number\"\n              min=\"9000\"\n              step=\"1000\"\n              placeholder=\"금액을 입력하세요 (원)\"\n              value={customAmount}\n              onChange={e => setCustomAmount(e.target.value)}\n              style={{ width: '100%', padding: 8, borderRadius: 4, border: '1px solid #ccc' }}\n            />\n          </div>\n        )}\n      </div>\n      <button\n        onClick={handlePayment}\n        style={{ width: '100%', padding: 12, background: '#007bff', color: '#fff', border: 'none', borderRadius: 4, fontSize: 16, cursor: 'pointer' }}\n        disabled={getAmount() < 9000}\n      >\n        결제하기\n      </button>\n      {/* 토스페이먼츠 결제 위젯은 결제 버튼 클릭 시 팝업으로 동작합니다. */}\n    </div>\n  );\n}\n\nexport default PaymentPage; "],"names":["paymentOptions","setPaymentOptions","useState","selectedOption","setSelectedOption","customAmount","setCustomAmount","loading","setLoading","useNavigate","useEffect","loadPaymentOptions","async","q","query","collection","db","orderBy","options","getDocs","docs","map","doc","id","data","value","push","label","amount","length","error","console","getAmount","_paymentOptions$find","Number","find","opt","requestTossPayment","_paymentOptions$find2","orderId","Date","now","tossPayments","window","TossPayments","selectedOptionLabel","requestPayment","orderName","customerName","successUrl","location","origin","failUrl","catch","code","alert","message","_jsx","children","_jsxs","className","style","maxWidth","margin","padding","background","borderRadius","boxShadow","marginBottom","type","name","checked","onChange","marginLeft","color","toLocaleString","marginTop","min","step","placeholder","e","target","width","border","onClick","handlePayment","script","document","createElement","src","body","appendChild","onload","onerror","fontSize","cursor","disabled"],"sourceRoot":""}